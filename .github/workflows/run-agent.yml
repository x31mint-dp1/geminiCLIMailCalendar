name: Run Email->Calendar Agent

on:
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,19 * * *'  # 3 volte al giorno UTC (adatta ai tuoi orari locali)

concurrency:
  group: calendar-agent-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      TZ: Europe/Rome
      TIMEZONE: Europe/Rome
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system deps
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y curl unzip

      - name: Install Gemini CLI
        shell: bash
        run: |
          set -euxo pipefail
          curl -fsSL https://dl.google.com/gemini/install.sh | bash
          # Aggiungi percorsi comuni al PATH per i passi successivi
          if [ -d "$HOME/.gemini/bin" ]; then echo "$HOME/.gemini/bin" >> "$GITHUB_PATH"; fi
          if [ -d "$HOME/.local/bin" ]; then echo "$HOME/.local/bin" >> "$GITHUB_PATH"; fi
          if [ -d "$HOME/bin" ]; then echo "$HOME/bin" >> "$GITHUB_PATH"; fi

      - name: Locate Gemini CLI (fallback PATH)
        shell: bash
        run: |
          set -euxo pipefail
          if ! command -v gemini >/dev/null 2>&1; then
            FOUND_DIR=""
            for d in "$HOME/.gemini/bin" "$HOME/.local/bin" "$HOME/bin"; do
              if [ -x "$d/gemini" ]; then FOUND_DIR="$d"; break; fi
            done
            if [ -n "$FOUND_DIR" ]; then
              echo "$FOUND_DIR" >> "$GITHUB_PATH"
            fi
          fi

      - name: Verify Gemini CLI
        shell: bash
        run: |
          set -euxo pipefail
          gemini --version || (echo 'Gemini CLI mancante' && exit 1)

      - name: Install Python dependencies
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install -r "requirements.txt"

      - name: Run agent
        working-directory: ${{ github.workspace }}
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          CLIENT_SECRET_JSON: ${{ secrets.CLIENT_SECRET_JSON }}
          TOKEN_JSON: ${{ secrets.TOKEN_JSON }}
        shell: bash
        run: |
          # Jitter di 5 secondi per ridurre collisioni con altri job pianificati
          sleep 5
          python "ControllaEmailCreaEvento.py"

      - name: Job summary
        if: always()
        shell: bash
        run: |
          {
            echo "# Riepilogo Agent Gmail -> Calendar";
            echo "- Branch: $GITHUB_REF";
            echo "- Commit: $GITHUB_SHA";
            echo "- Esecuzione: $(date -u) (UTC)";
            echo "- Runner: $RUNNER_OS";
          } >> $GITHUB_STEP_SUMMARY

      - name: Raccogli artefatti (log)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-logs-${{ github.run_id }}
          path: |
            automation.log
          if-no-files-found: ignore
          retention-days: 10
